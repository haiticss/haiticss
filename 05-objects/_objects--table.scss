
/* -------------------------------------------------------------------------
 * TABLE
 *
 * A simple object for manipulating the structure of HTML `table`s.
 *
 */

$o-table-enabled:                       true !default;

$o-table-spaces:                        map_remove($s-spaces, large, huge) !default;
$o-table-default-space:                 none !default;
$o-table-include-modifiers-space:       true !default;
$o-table-include-modifiers-fixed:       true !default;


@if ($o-table-enabled) {
  .o-table {
    width: 100%;

    th,
    td {
      padding: map-get($o-table-spaces, $o-table-default-space);
    }
  }

}


// Space modifiers
// --------------------------------------------------

@mixin o-table--space($space-name: none, $space-value: 0) {
  .o-table--space-#{$space-name} {
    th,
    td {
      padding: $space-value;
    }
  }
}

@if ($o-table-enabled and $o-table-include-modifiers-space) {
  @each $space-name, $space-value in $o-table-spaces {

    @if ($space-name != $o-table-default-space) {
      @include o-table--space($space-name, $space-value);
    }
  }
}


// Fixed modifier
// --------------------------------------------------

@if ($o-table-enabled and $o-table-include-modifiers-fixed) {
  /**
   * `table-layout: fixed` forces all cells within a table to occupy the same
   * width as each other. This also has performance benefits: because the browser
   * does not need to (re)calculate cell dimensions based on content it discovers,
   * the table can be rendered very quickly. Further reading:
   * https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout#Values
   */

  .o-table--fixed {
    table-layout: fixed;
  }
}
