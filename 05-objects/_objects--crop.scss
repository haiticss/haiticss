
/* -------------------------------------------------------------------------
 * CROP
 *
 * A list of cropping ratios that get generated as modifier classes
 *
 */

$o-crop-enabled:                        true !default;


@if ($o-crop-enabled) {
  /**
  * Provide a cropping container in order to display media (usually images)
  * cropped to certain ratios.
  *
  * 1. Set up a positioning context in which the image can sit.
  * 2. This is the crucial part: where the cropping happens.
  */

  .o-crop {
    position: relative; /* [1] */
    display: block;
    overflow: hidden; /* [2] */
  }

  /**
   * Apply this class to the content (usually `img`) that needs cropping.
   *
   * 1. Image’s default positioning is top-left in the cropping box.
   * 2. Make sure the media doesn’t stop itself too soon.
   */

  .o-crop__content {
    position: absolute;
    top: 0; /* [1] */
    left: 0; /* [1] */
    max-width: none; /* [2] */
  }

  /**
   * We can position the media in different locations within the cropping area.
   */

  .o-crop__content--right {
    right: 0;
    left: auto;
  }

  .o-crop__content--bottom {
    top: auto;
    bottom: 0;
  }

  .o-crop__content--center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }


  // Crop variants
  // -------------------------------------------

  @each $width, $height in $s-aspect-ratios {
    .o-crop--#{$width}\:#{$height} {
      padding-bottom: ($height/$width) * 100%;
    }
  }

  // Generate the golden ratio variants
  .o-crop--golden-h {
    padding-bottom: (1/$s-golden-ratio) * 100%;
  }

  .o-crop--golden-v {
    padding-bottom: ($s-golden-ratio/1) * 100%;
  }

}
